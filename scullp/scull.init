#!/bin/sh

DEVICE="scull"
SECTION="misc"

PREFIX="scull"
FILES="		0 0			1 1			2 2			3 3
		pipe0 4		pipe1 5 	piep2 6 	pipe3 7"

INSMOD=/sbin/insmod
CFG=/etc/${DEVICE}.conf

KERNEL=`uname -r`

MODDIR="/lib/modules/$KERNEL/kernel/drivers/$SECTION"
if [[ ! -d $MODDIR ]]; then MODDIR="/lib/modules/$KERNEL/$SECTION"; fi

USER_ID=`id -u`
if [[ "$USER_ID" != "0" ]]; then
	echo "You must be root to load or unload kernel moules"
	exit 1
fi

if [[ -r $CFG ]]; then
	OWNER=`awk '$1=="owner" {print $2}' $CFG`
	GROUP=`awk '$1=="group" {print $2}' $CFG`
	MODE=`awk '$1=="mode" {print $2}' $CFG`
	OPTIONS=`sed -n "/^options / s/options ${DEVICE} //p" /etc/$DEVICE.conf`
fi

dev_specific_post_load()
{
	:
}

dev_specific_pre_unload()
{
	:
}

usage ()
{
	echo "Usage: ${0##.*/} <start|stop|status>" >&2
	exit 1
}

remove_files()
{
	local devlist=""
	local file
	
	cd /dev

	while true; do
		if [[ $# -lt 2 ]]; then break; fi
		file=${DEVICE}$1
		devlist="$devlist $file"
		shift 2
	done
	rm -f $devlist
}

create_files()
{
	local devlist=""
	local file

	cd /dev

	while true; do
		if [[ $# -lt 2 ]]; then break; fi
		file="${DEVICE}$1"
		mknod $file c $MAJOR $2
		devlist="$devlist $file"
		shift 2
	done

	if [[ -ne $OWNER ]]; then chown $OWNER $devlist; fi
	if [[ -ne $GROUP ]]; then chgrp $GROUP $devlist; fi
	if [[ -ne $MODE ]]; then chmod $MODE $devlist; fi
}

load_device()
{
	if [[ -f $MODDIR/$DEVICE.ko ]]; then
		devpath=$MODDIR/$DEVICE.ko
	elif [[ -f ./$DEVICE.ko ]]; then
		devpath=./$DEVICE.ko
	else
		devpath=$DEVICE # let insmod/modprobe guess
	fi

	if $INSMOD $devpath $OPTIONS; then
		MAJOR=`awk "\\$2==\"$DEVICE\" {print \\$1}" /proc/devices`
		remove_files $FILES
		create_files $FILES
		dev_specific_post_load
	else
		echo -n " FAILED"
	fi
}

unload_device()
{
	dev_specific_pre_unload
	/sbin/rmmod $DEVICE
	remove_files $FILES
}

status_device()
{
	grep -q $DEVICE /proc/devices
}

if [[ $# != 1 ]]; then
	usage
fi

case $1 in 
	start)
		echo -n "Loading $DEVICE "
		load_device
		echo "."
		;;
	stop)
		echo -n "Unloading $DEVICE "
		unload_device
		echo "."
		;;
	restart)
		echo -n "Reloading $DEVICE "
		unload_device
		load_device
		echo "."
		;;
	status)
		echo -n "$DEVICE is "
		status_device
		if [[ $? == 0 ]]; then 
			echo "loaded."
		else
			echo "not loaded."
		fi
		;;
	*)
		usage
		;;
esac
